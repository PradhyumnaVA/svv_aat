$date
	Fri May 10 00:27:25 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_shift $end
$var wire 5 ! op [4:0] $end
$var reg 1 " clk $end
$var reg 4 # in_a [3:0] $end
$var reg 4 $ in_b [3:0] $end
$var reg 1 % rst $end
$scope module dut $end
$var wire 1 " clk $end
$var wire 4 & in_a [3:0] $end
$var wire 4 ' in_b [3:0] $end
$var wire 1 % rst $end
$var wire 5 ( op [4:0] $end
$var reg 1 ) out_a $end
$var reg 1 * out_b $end
$var integer 32 + i [31:0] $end
$scope module fa $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 " clk $end
$var wire 1 % rst $end
$var reg 1 , carry $end
$var reg 5 - op [4:0] $end
$var reg 1 . sum $end
$var integer 32 / count [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 /
0.
b0 -
0,
b0 +
0*
0)
b0 (
b1111 '
b1000 &
1%
b1111 $
b1000 #
0"
b0 !
$end
#4
0%
#5
b1 +
1*
b1 /
1"
#10
0"
#15
b10 /
1.
b10 +
1"
#20
0"
#25
b11 +
b11 /
b1 !
b1 (
b1 -
1"
#30
0"
#35
b100 /
b11 !
b11 (
b11 -
b100 +
1)
1"
#40
0"
#45
b101 /
b111 !
b111 (
b111 -
1,
0.
1"
#50
0"
#55
b10111 !
b10111 (
b10111 -
b110 /
1.
1"
#60
0"
#65
1"
#70
0"
#75
1"
#80
0"
#85
1"
#90
0"
#95
1"
#100
0"
#104
